apiVersion: v1
kind: DeploymentConfig
metadata:
  creationTimestamp: null
  generation: 1
  name: {{ .Release.Name }}-chrome
  namespace: {{ .Release.Namespace }}
spec:
  minReadySeconds: 60
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 2
  selector:
    name: {{ .Release.Name }}-chrome
  strategy:
    activeDeadlineSeconds: 21600
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    type: Recreate
  template:
    metadata:
      labels:
        name: {{ .Release.Name }}-chrome
    spec:
      containers:
      - args:
        env:
        - name: HUB_HOST
          value: {{ .Release.Name }}-selenium-hub
        - name: HUB_PORT
          value: '4444'
        - name: NODE_MAX_INSTANCES
          value: '1'
        - name: NODE_MAX_SESSION
          value: '1'
        image: selenium/node-chrome:3.141.59-palladium
        imagePullPolicy: Always
        name: {{ .Release.Name }}-chrome
        ports:
        - containerPort: 5900
          protocol: TCP
        resources:
          limits:
            memory: 2Gi
          requests:
            memory: 1Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /dev/shm
          name: chrome-dev
      dnsPolicy: ClusterFirst 
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: sa-{{ .Release.Name }}
      serviceAccountName: sa-{{ .Release.Name }}
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
  - type: ConfigChange
---  
apiVersion: v1
kind: Service
metadata:
  labels:
    name: {{ .Release.Name }}-chrome
  name: {{ .Release.Name }}-chrome
  namespace: {{ .Release.Namespace }}
spec:
  externalTrafficPolicy: Cluster
  ports:
  - name: "5900"
    port: 5900
    protocol: TCP
    targetPort: 5900
  selector:
    name: {{ .Release.Name }}-chrome
  sessionAffinity: None
  type: NodePort
